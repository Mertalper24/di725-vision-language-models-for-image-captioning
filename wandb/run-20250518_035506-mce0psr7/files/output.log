Loading dataset...
Initializing model with QLoRA...
`config.hidden_act` is ignored, you should use `config.hidden_activation` instead.
Gemma's activation function will be set to `gelu_pytorch_tanh`. Please, use
`config.hidden_activation` if you want to override this behaviour.
See https://github.com/huggingface/transformers/pull/29402 for more details.
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 3/3 [00:10<00:00,  3.47s/it]
trainable params: 11,298,816 || all params: 2,934,765,296 || trainable%: 0.3850
C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\training_args.py:1575: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of ðŸ¤— Transformers. Use `eval_strategy` instead
  warnings.warn(
Starting training...
[34m[1mwandb[0m: [33mWARNING[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
  0%|                                                                    | 0/22 [00:00<?, ?it/s]C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\utils\checkpoint.py:61: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`.
Traceback (most recent call last):
  File "C:\Users\Mert\Desktop\di725-vision-language-models-for-image-captioning\train_with_wandb.py", line 168, in <module>
    main()
  File "C:\Users\Mert\Desktop\di725-vision-language-models-for-image-captioning\train_with_wandb.py", line 158, in main
    trainer.train()
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 2164, in train
    return inner_training_loop(
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 2524, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 3687, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\accelerate\accelerator.py", line 2473, in backward
    loss.backward(**kwargs)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\autograd\__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn
Traceback (most recent call last):
  File "C:\Users\Mert\Desktop\di725-vision-language-models-for-image-captioning\train_with_wandb.py", line 168, in <module>
    main()
  File "C:\Users\Mert\Desktop\di725-vision-language-models-for-image-captioning\train_with_wandb.py", line 158, in main
    trainer.train()
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 2164, in train
    return inner_training_loop(
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 2524, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\transformers\trainer.py", line 3687, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\accelerate\accelerator.py", line 2473, in backward
    loss.backward(**kwargs)
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "C:\Users\Mert\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\autograd\__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn
